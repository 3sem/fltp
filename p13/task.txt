На паре мы познакомились с некоторыми особенностями Clang как фронтенда, посмотрели примеры и некоторые базовые действия.
Задание: 
Домашка-7. Clang

I. Исследовать рекурсивный спуск в Clang:

1) Выкачиваем llvm из репозитория llvm-project на github
2) mkdir build && cd build
3) cmake -DLLVM_ENABLE_PROJECTS=clang -G "Unix Makefiles" ../llvm -DCMAKE_BUILD_TYPE=debug 
4) make -j<number_of_jobs>
5) пишем программу, содержащую исследуемый код, например static int a,b,c,d,e,f = 5;
6) запускаем компиляцию под отладчиком: lldb -- clang -cc1 -emit-obj <program_name>.c
7) ставим брейкпоинты на функции вида parse<Something>. Определить, что за <Something> у a,b,c,d,e,f ? Для этого глазами смотрим AST-дерево: clang -cc1 -ast-dump 1.c
8) b parse<Something> для каждой функции. Затем r; Затем bt на каждом брейкпоинте. Проследите за передачей ключевых аргументов от фрейма к фрейму: frame select <NumOfFrame>
9) Выведите трассы вызовов для каждого брейкпоинта, определите, какую последовательность вызовов они проходят от корневого Parse (считать его нетерминалом S).
  
II. Попытайтесь поймать ситуации с лексером, описанные в t13/clang_frontend.pdf
